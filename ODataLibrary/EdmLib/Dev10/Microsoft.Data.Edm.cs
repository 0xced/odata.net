//   Copyright 2011 Microsoft Corporation
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.

namespace Microsoft.Data.Edm {
    using System;
    using System.Reflection;
    using System.Globalization;
    using System.Resources;
    using System.Text;
    using System.Threading;
    using System.Security.Permissions;

    
    using System.ComponentModel;

    [AttributeUsage(AttributeTargets.All)]
    internal sealed class EntityResDescriptionAttribute : DescriptionAttribute {

        private bool replaced = false;

        /// <summary>
        ///     Constructs a new sys description.
        /// </summary>
        /// <param name='description'>
        ///     description text.
        /// </param>
        public EntityResDescriptionAttribute(string description) : base(description) {
        }

        /// <summary>
        ///     Retrieves the description text.
        /// </summary>
        /// <returns>
        ///     description
        /// </returns>
        public override string Description {
            get {
                if (!replaced) {
                    replaced = true;
                    DescriptionValue = EntityRes.GetString(base.Description);
                }
                return base.Description;
            }
        }
    }

    [AttributeUsage(AttributeTargets.All)]
    internal sealed class EntityResCategoryAttribute : CategoryAttribute {

        public EntityResCategoryAttribute(string category) : base(category) {
        }

        protected override string GetLocalizedString(string value) {
            return EntityRes.GetString(value);
        }
    }


    /// <summary>
    ///    AutoGenerated resource class. Usage:
    ///
    ///        string s = EntityRes.GetString(EntityRes.MyIdenfitier);
    /// </summary>
    
    internal sealed class EntityRes {
        internal const string EdmPrimitive_UnexpectedKind = "EdmPrimitive_UnexpectedKind";
        internal const string EdmNavigation_RequiresPartner = "EdmNavigation_RequiresPartner";
        internal const string EdmCollectionValueType = "EdmCollectionValueType";
        internal const string Annotations_ImmutableChange = "Annotations_ImmutableChange";
        internal const string Annotations_DocumentationPun = "Annotations_DocumentationPun";
        internal const string Annotations_TypeMismatch = "Annotations_TypeMismatch";
        internal const string Constructable_EntitySetTypeInvalidFromEntityTypeRemoval = "Constructable_EntitySetTypeInvalidFromEntityTypeRemoval";
        internal const string TypeSemantics_CouldNotConvertTypeReference = "TypeSemantics_CouldNotConvertTypeReference";
        internal const string AddProperty_DeclaringTypeMismatch = "AddProperty_DeclaringTypeMismatch";
        internal const string SetBaseType_RowCantHaveBaseType = "SetBaseType_RowCantHaveBaseType";
        internal const string EdmModel_Validator_Semantic_SystemNamespaceEncountered = "EdmModel_Validator_Semantic_SystemNamespaceEncountered";
        internal const string EdmModel_Validator_Semantic_SimilarRelationshipEnd = "EdmModel_Validator_Semantic_SimilarRelationshipEnd";
        internal const string EdmModel_Validator_Semantic_ConcurrencyRedefinedOnSubTypeOfEntitySetType = "EdmModel_Validator_Semantic_ConcurrencyRedefinedOnSubTypeOfEntitySetType";
        internal const string EdmModel_Validator_Semantic_EntitySetTypeHasNoKeys = "EdmModel_Validator_Semantic_EntitySetTypeHasNoKeys";
        internal const string EdmModel_Validator_Semantic_DuplicateEndName = "EdmModel_Validator_Semantic_DuplicateEndName";
        internal const string EdmModel_Validator_Semantic_DuplicatePropertyNameSpecifiedInEntityKey = "EdmModel_Validator_Semantic_DuplicatePropertyNameSpecifiedInEntityKey";
        internal const string EdmModel_Validator_Semantic_InvalidComplexTypeAbstract = "EdmModel_Validator_Semantic_InvalidComplexTypeAbstract";
        internal const string EdmModel_Validator_Semantic_InvalidComplexTypePolymorphic = "EdmModel_Validator_Semantic_InvalidComplexTypePolymorphic";
        internal const string EdmModel_Validator_Semantic_InvalidKeyNullablePart = "EdmModel_Validator_Semantic_InvalidKeyNullablePart";
        internal const string EdmModel_Validator_Semantic_EntityKeyMustBeScalar = "EdmModel_Validator_Semantic_EntityKeyMustBeScalar";
        internal const string EdmModel_Validator_Semantic_InvalidKeyKeyDefinedInBaseClass = "EdmModel_Validator_Semantic_InvalidKeyKeyDefinedInBaseClass";
        internal const string EdmModel_Validator_Semantic_KeyMissingOnEntityType = "EdmModel_Validator_Semantic_KeyMissingOnEntityType";
        internal const string EdmModel_Validator_Semantic_BadNavigationPropertyUndefinedRole = "EdmModel_Validator_Semantic_BadNavigationPropertyUndefinedRole";
        internal const string EdmModel_Validator_Semantic_BadNavigationPropertyRolesCannotBeTheSame = "EdmModel_Validator_Semantic_BadNavigationPropertyRolesCannotBeTheSame";
        internal const string EdmModel_Validator_Semantic_BadNavigationPropertyCouldNotDetermineType = "EdmModel_Validator_Semantic_BadNavigationPropertyCouldNotDetermineType";
        internal const string EdmModel_Validator_Semantic_InvalidOperationMultipleEndsInAssociation = "EdmModel_Validator_Semantic_InvalidOperationMultipleEndsInAssociation";
        internal const string EdmModel_Validator_Semantic_EndWithManyMultiplicityCannotHaveOperationsSpecified = "EdmModel_Validator_Semantic_EndWithManyMultiplicityCannotHaveOperationsSpecified";
        internal const string EdmModel_Validator_Semantic_EndNameAlreadyDefinedDuplicate = "EdmModel_Validator_Semantic_EndNameAlreadyDefinedDuplicate";
        internal const string EdmModel_Validator_Semantic_SameRoleReferredInReferentialConstraint = "EdmModel_Validator_Semantic_SameRoleReferredInReferentialConstraint";
        internal const string EdmModel_Validator_Semantic_InvalidMultiplicityFromRoleUpperBoundMustBeOne = "EdmModel_Validator_Semantic_InvalidMultiplicityFromRoleUpperBoundMustBeOne";
        internal const string EdmModel_Validator_Semantic_InvalidMultiplicityFromRoleToPropertyNullableV1 = "EdmModel_Validator_Semantic_InvalidMultiplicityFromRoleToPropertyNullableV1";
        internal const string EdmModel_Validator_Semantic_InvalidMultiplicityFromRoleToPropertyNonNullableV1 = "EdmModel_Validator_Semantic_InvalidMultiplicityFromRoleToPropertyNonNullableV1";
        internal const string EdmModel_Validator_Semantic_InvalidMultiplicityFromRoleToPropertyNonNullableV2 = "EdmModel_Validator_Semantic_InvalidMultiplicityFromRoleToPropertyNonNullableV2";
        internal const string EdmModel_Validator_Semantic_InvalidToPropertyInRelationshipConstraint = "EdmModel_Validator_Semantic_InvalidToPropertyInRelationshipConstraint";
        internal const string EdmModel_Validator_Semantic_InvalidMultiplicityToRoleUpperBoundMustBeOne = "EdmModel_Validator_Semantic_InvalidMultiplicityToRoleUpperBoundMustBeOne";
        internal const string EdmModel_Validator_Semantic_InvalidMultiplicityToRoleUpperBoundMustBeMany = "EdmModel_Validator_Semantic_InvalidMultiplicityToRoleUpperBoundMustBeMany";
        internal const string EdmModel_Validator_Semantic_MismatchNumberOfPropertiesinRelationshipConstraint = "EdmModel_Validator_Semantic_MismatchNumberOfPropertiesinRelationshipConstraint";
        internal const string EdmModel_Validator_Semantic_TypeMismatchRelationshipConstraint = "EdmModel_Validator_Semantic_TypeMismatchRelationshipConstraint";
        internal const string EdmModel_Validator_Semantic_InvalidPropertyInRelationshipConstraintDependentEnd = "EdmModel_Validator_Semantic_InvalidPropertyInRelationshipConstraintDependentEnd";
        internal const string EdmModel_Validator_Semantic_InvalidPropertyInRelationshipConstraintPrimaryEnd = "EdmModel_Validator_Semantic_InvalidPropertyInRelationshipConstraintPrimaryEnd";
        internal const string EdmModel_Validator_Semantic_NullableComplexType = "EdmModel_Validator_Semantic_NullableComplexType";
        internal const string EdmModel_Validator_Semantic_InvalidPropertyType = "EdmModel_Validator_Semantic_InvalidPropertyType";
        internal const string EdmModel_Validator_Semantic_ComposableFunctionImportCannotBeSideEffecting = "EdmModel_Validator_Semantic_ComposableFunctionImportCannotBeSideEffecting";
        internal const string EdmModel_Validator_Semantic_BindableFunctionImportMustHaveParameters = "EdmModel_Validator_Semantic_BindableFunctionImportMustHaveParameters";
        internal const string EdmModel_Validator_Semantic_FunctionImportWithUnsupportedReturnTypeV1 = "EdmModel_Validator_Semantic_FunctionImportWithUnsupportedReturnTypeV1";
        internal const string EdmModel_Validator_Semantic_FunctionImportWithUnsupportedReturnTypeV1_1 = "EdmModel_Validator_Semantic_FunctionImportWithUnsupportedReturnTypeV1_1";
        internal const string EdmModel_Validator_Semantic_FunctionImportWithUnsupportedReturnTypeV2 = "EdmModel_Validator_Semantic_FunctionImportWithUnsupportedReturnTypeV2";
        internal const string EdmModel_Validator_Semantic_FunctionImportReturnEntitiesButDoesNotSpecifyEntitySet = "EdmModel_Validator_Semantic_FunctionImportReturnEntitiesButDoesNotSpecifyEntitySet";
        internal const string EdmModel_Validator_Semantic_FunctionImportEntityTypeDoesNotMatchEntitySet = "EdmModel_Validator_Semantic_FunctionImportEntityTypeDoesNotMatchEntitySet";
        internal const string EdmModel_Validator_Semantic_FunctionImportSpecifiesEntitySetButNotEntityType = "EdmModel_Validator_Semantic_FunctionImportSpecifiesEntitySetButNotEntityType";
        internal const string EdmModel_Validator_Semantic_ParameterNameAlreadyDefinedDuplicate = "EdmModel_Validator_Semantic_ParameterNameAlreadyDefinedDuplicate";
        internal const string EdmModel_Validator_Semantic_DuplicateEntityContainerMemberName = "EdmModel_Validator_Semantic_DuplicateEntityContainerMemberName";
        internal const string EdmModel_Validator_Semantic_TypeNameAlreadyDefined = "EdmModel_Validator_Semantic_TypeNameAlreadyDefined";
        internal const string EdmModel_Validator_Semantic_InvalidMemberNameMatchesTypeName = "EdmModel_Validator_Semantic_InvalidMemberNameMatchesTypeName";
        internal const string EdmModel_Validator_Semantic_PropertyNameAlreadyDefined = "EdmModel_Validator_Semantic_PropertyNameAlreadyDefined";
        internal const string EdmModel_Validator_Semantic_BaseTypeMustHaveSameTypeKind = "EdmModel_Validator_Semantic_BaseTypeMustHaveSameTypeKind";
        internal const string EdmModel_Validator_Semantic_RowTypeMustNotHaveBaseType = "EdmModel_Validator_Semantic_RowTypeMustNotHaveBaseType";
        internal const string EdmModel_Validator_Semantic_FunctionsNotSupportedBeforeV2 = "EdmModel_Validator_Semantic_FunctionsNotSupportedBeforeV2";
        internal const string EdmModel_Validator_Semantic_FunctionImportSideEffectingNotSupportedBeforeV3 = "EdmModel_Validator_Semantic_FunctionImportSideEffectingNotSupportedBeforeV3";
        internal const string EdmModel_Validator_Semantic_FunctionImportComposableNotSupportedBeforeV3 = "EdmModel_Validator_Semantic_FunctionImportComposableNotSupportedBeforeV3";
        internal const string EdmModel_Validator_Semantic_FunctionImportBindableNotSupportedBeforeV3 = "EdmModel_Validator_Semantic_FunctionImportBindableNotSupportedBeforeV3";
        internal const string EdmModel_Validator_Semantic_AbstractEntitiesCannotBeInstantiated = "EdmModel_Validator_Semantic_AbstractEntitiesCannotBeInstantiated";
        internal const string EdmModel_Validator_Semantic_AssociationSetEndRoleMustBelongToSetElementType = "EdmModel_Validator_Semantic_AssociationSetEndRoleMustBelongToSetElementType";
        internal const string EdmModel_Validator_Semantic_KeyPropertyMustBelongToEntity = "EdmModel_Validator_Semantic_KeyPropertyMustBelongToEntity";
        internal const string EdmModel_Validator_Semantic_ReferentialConstraintPrincipleEndMustBelongToAssociation = "EdmModel_Validator_Semantic_ReferentialConstraintPrincipleEndMustBelongToAssociation";
        internal const string EdmModel_Validator_Semantic_DependentPropertiesMustBelongToDependentEntity = "EdmModel_Validator_Semantic_DependentPropertiesMustBelongToDependentEntity";
        internal const string EdmModel_Validator_Semantic_DeclaringTypeMustBeCorrect = "EdmModel_Validator_Semantic_DeclaringTypeMustBeCorrect";
        internal const string EdmModel_Validator_Semantic_InaccessibleAssociation = "EdmModel_Validator_Semantic_InaccessibleAssociation";
        internal const string EdmModel_Validator_Semantic_InaccessibleType = "EdmModel_Validator_Semantic_InaccessibleType";
        internal const string EdmModel_Validator_Semantic_InvalidNavigationPropertyType = "EdmModel_Validator_Semantic_InvalidNavigationPropertyType";
        internal const string EdmModel_Validator_Semantic_InvalidAssociationSetEndSetWrongType = "EdmModel_Validator_Semantic_InvalidAssociationSetEndSetWrongType";
        internal const string EdmModel_Validator_Semantic_OnlyInputParametersAllowedInFunctions = "EdmModel_Validator_Semantic_OnlyInputParametersAllowedInFunctions";
        internal const string EdmModel_Validator_Semantic_FunctionParameterIncorrectType = "EdmModel_Validator_Semantic_FunctionParameterIncorrectType";
        internal const string EdmModel_Validator_Semantic_FunctionImportParameterIncorrectType = "EdmModel_Validator_Semantic_FunctionImportParameterIncorrectType";
        internal const string EdmModel_Validator_Semantic_FunctionReturnTypeIncorrectType = "EdmModel_Validator_Semantic_FunctionReturnTypeIncorrectType";
        internal const string EdmModel_Validator_Semantic_InvalidRowPropertyType = "EdmModel_Validator_Semantic_InvalidRowPropertyType";
        internal const string EdmModel_Validator_Semantic_RowTypeMustHaveProperties = "EdmModel_Validator_Semantic_RowTypeMustHaveProperties";
        internal const string EdmModel_Validator_Semantic_DuplicateDependentProperty = "EdmModel_Validator_Semantic_DuplicateDependentProperty";
        internal const string EdmModel_Validator_Semantic_ScaleOutOfRange = "EdmModel_Validator_Semantic_ScaleOutOfRange";
        internal const string EdmModel_Validator_Semantic_StringMaxLengthOutOfRange = "EdmModel_Validator_Semantic_StringMaxLengthOutOfRange";
        internal const string EdmModel_Validator_Semantic_MaxLengthOutOfRange = "EdmModel_Validator_Semantic_MaxLengthOutOfRange";
        internal const string EdmModel_Validator_Semantic_InvalidPropertyTypeConcurrencyMode = "EdmModel_Validator_Semantic_InvalidPropertyTypeConcurrencyMode";
        internal const string EdmModel_Validator_Semantic_EntityKeyMustNotBeBinaryBeforeV2 = "EdmModel_Validator_Semantic_EntityKeyMustNotBeBinaryBeforeV2";
        internal const string EdmModel_Validator_Semantic_PathExpressionHasNoEntityContext = "EdmModel_Validator_Semantic_PathExpressionHasNoEntityContext";
        internal const string EdmModel_Validator_Syntactic_MissingName = "EdmModel_Validator_Syntactic_MissingName";
        internal const string EdmModel_Validator_Syntactic_EdmModel_NameIsTooLong = "EdmModel_Validator_Syntactic_EdmModel_NameIsTooLong";
        internal const string EdmModel_Validator_Syntactic_EdmModel_NameIsNotAllowed = "EdmModel_Validator_Syntactic_EdmModel_NameIsNotAllowed";
        internal const string EdmModel_Validator_Syntactic_MissingNamespaceName = "EdmModel_Validator_Syntactic_MissingNamespaceName";
        internal const string EdmModel_Validator_Syntactic_EdmModel_NamespaceNameIsTooLong = "EdmModel_Validator_Syntactic_EdmModel_NamespaceNameIsTooLong";
        internal const string EdmModel_Validator_Syntactic_EdmModel_NamespaceNameIsNotAllowed = "EdmModel_Validator_Syntactic_EdmModel_NamespaceNameIsNotAllowed";
        internal const string Serializer_SingleFileExpected = "Serializer_SingleFileExpected";
        internal const string Serializer_UnknownEdmVersion = "Serializer_UnknownEdmVersion";
        internal const string Serializer_UnknownEdmxVersion = "Serializer_UnknownEdmxVersion";
        internal const string XmlParser_EmptyFile = "XmlParser_EmptyFile";
        internal const string XmlParser_EmptySchemaTextReader = "XmlParser_EmptySchemaTextReader";
        internal const string XmlParser_InvalidName = "XmlParser_InvalidName";
        internal const string XmlParser_MissingAttribute = "XmlParser_MissingAttribute";
        internal const string XmlParser_TextNotAllowed = "XmlParser_TextNotAllowed";
        internal const string XmlParser_UnexpectedAttribute = "XmlParser_UnexpectedAttribute";
        internal const string XmlParser_UnexpectedElement = "XmlParser_UnexpectedElement";
        internal const string XmlParser_UnusedElement = "XmlParser_UnusedElement";
        internal const string XmlParser_UnexpectedNodeType = "XmlParser_UnexpectedNodeType";
        internal const string XmlParser_UnexpectedRootElement = "XmlParser_UnexpectedRootElement";
        internal const string XmlParser_UnexpectedRootElementNoNamespace = "XmlParser_UnexpectedRootElementNoNamespace";
        internal const string CsdlParser_InvalidBoolean = "CsdlParser_InvalidBoolean";
        internal const string CsdlParser_InvalidInteger = "CsdlParser_InvalidInteger";
        internal const string CsdlParser_InvalidLong = "CsdlParser_InvalidLong";
        internal const string CsdlParser_InvalidMaxLength = "CsdlParser_InvalidMaxLength";
        internal const string CsdlParser_InvalidSrid = "CsdlParser_InvalidSrid";
        internal const string CsdlParser_AssociationHasAtMostOneConstraint = "CsdlParser_AssociationHasAtMostOneConstraint";
        internal const string CsdlParser_InvalidDeleteAction = "CsdlParser_InvalidDeleteAction";
        internal const string CsdlParser_InvalidAssociationIncorrectNumberOfEnds = "CsdlParser_InvalidAssociationIncorrectNumberOfEnds";
        internal const string CsdlParser_InvalidAssociationSetIncorrectNumberOfEnds = "CsdlParser_InvalidAssociationSetIncorrectNumberOfEnds";
        internal const string CsdlParser_InvalidConcurrencyMode = "CsdlParser_InvalidConcurrencyMode";
        internal const string CsdlParser_InvalidParameterMode = "CsdlParser_InvalidParameterMode";
        internal const string CsdlParser_InvalidEndRoleInRelationshipConstraint = "CsdlParser_InvalidEndRoleInRelationshipConstraint";
        internal const string CsdlParser_InvalidMultiplicity = "CsdlParser_InvalidMultiplicity";
        internal const string CsdlParser_ReferentialConstraintRequiresOneDependent = "CsdlParser_ReferentialConstraintRequiresOneDependent";
        internal const string CsdlParser_ReferentialConstraintRequiresOnePrincipal = "CsdlParser_ReferentialConstraintRequiresOnePrincipal";
        internal const string CsdlSemantics_ReferentialConstraintMismatch = "CsdlSemantics_ReferentialConstraintMismatch";
        internal const string CsdlSemantics_EnumMemberValueOutOfRange = "CsdlSemantics_EnumMemberValueOutOfRange";
        internal const string EdmxParser_EdmxVersionMismatch = "EdmxParser_EdmxVersionMismatch";
        internal const string EdmxParser_BodyElement = "EdmxParser_BodyElement";
        internal const string UnknownEnumVal_Multiplicity = "UnknownEnumVal_Multiplicity";
        internal const string UnknownEnumVal_SchemaElementKind = "UnknownEnumVal_SchemaElementKind";
        internal const string UnknownEnumVal_TypeKind = "UnknownEnumVal_TypeKind";
        internal const string UnknownEnumVal_PrimitiveKind = "UnknownEnumVal_PrimitiveKind";
        internal const string UnknownEnumVal_ContainerElementKind = "UnknownEnumVal_ContainerElementKind";
        internal const string UnknownEnumVal_EdmxTarget = "UnknownEnumVal_EdmxTarget";
        internal const string UnknownEnumVal_FunctionParameterMode = "UnknownEnumVal_FunctionParameterMode";
        internal const string UnknownEnumVal_ConcurrencyMode = "UnknownEnumVal_ConcurrencyMode";
        internal const string UnknownEnumVal_PropertyKind = "UnknownEnumVal_PropertyKind";
        internal const string Bad_AmbiguousElementBinding = "Bad_AmbiguousElementBinding";
        internal const string Bad_BadByAssociation = "Bad_BadByAssociation";
        internal const string Bad_UnresolvedType = "Bad_UnresolvedType";
        internal const string Bad_UnresolvedEntityType = "Bad_UnresolvedEntityType";
        internal const string Bad_UnresolvedPrimitiveType = "Bad_UnresolvedPrimitiveType";
        internal const string Bad_UnresolvedEntitySet = "Bad_UnresolvedEntitySet";
        internal const string Bad_UnresolvedEntityContainer = "Bad_UnresolvedEntityContainer";
        internal const string Bad_UnresolvedProperty = "Bad_UnresolvedProperty";
        internal const string Bad_UnresolvedValueTerm = "Bad_UnresolvedValueTerm";
        internal const string Bad_CyclicEntity = "Bad_CyclicEntity";
        internal const string Bad_CyclicComplex = "Bad_CyclicComplex";
        internal const string Bad_CyclicEntityContainer = "Bad_CyclicEntityContainer";
        internal const string Bad_UncomputableAssociationEnd = "Bad_UncomputableAssociationEnd";

        static EntityRes loader = null;
        ResourceManager resources;

        internal EntityRes() {
            resources = new System.Resources.ResourceManager("Microsoft.Data.Edm", this.GetType().Assembly);
        }
        
        private static EntityRes GetLoader() {
            if (loader == null) {
                EntityRes sr = new EntityRes();
                Interlocked.CompareExchange(ref loader, sr, null);
            }
            return loader;
        }

        private static CultureInfo Culture {
            get { return null/*use ResourceManager default, CultureInfo.CurrentUICulture*/; }
        }
        
        public static ResourceManager Resources {
            get {
                return GetLoader().resources;
            }
        }
        
        public static string GetString(string name, params object[] args) {
            EntityRes sys = GetLoader();
            if (sys == null)
                return null;
            string res = sys.resources.GetString(name, EntityRes.Culture);

            if (args != null && args.Length > 0) {
                for (int i = 0; i < args.Length; i ++) {
                    String value = args[i] as String;
                    if (value != null && value.Length > 1024) {
                        args[i] = value.Substring(0, 1024 - 3) + "...";
                    }
                }
                return String.Format(CultureInfo.CurrentCulture, res, args);
            }
            else {
                return res;
            }
        }

        public static string GetString(string name) {
            EntityRes sys = GetLoader();
            if (sys == null)
                return null;
            return sys.resources.GetString(name, EntityRes.Culture);
        }
        
        public static string GetString(string name, out bool usedFallback) {
            // always false for this version of gensr
            usedFallback = false;
            return GetString(name);
        }

        public static object GetObject(string name) {
            EntityRes sys = GetLoader();
            if (sys == null)
                return null;
            return sys.resources.GetObject(name, EntityRes.Culture);
        }
    }
}
